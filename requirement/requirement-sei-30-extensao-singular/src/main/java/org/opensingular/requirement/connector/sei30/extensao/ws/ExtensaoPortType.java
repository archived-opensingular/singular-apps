
/*
 * Copyright (C) 2016 Singular Studios (a.k.a Atom Tecnologia) - www.opensingular.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opensingular.requirement.connector.sei30.extensao.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "extensaoPortType", targetNamespace = "extensaons")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ExtensaoPortType {


    /**
     * Assinar documento
     * 
     * @param identificacaoServico
     * @param idUnidade
     * @param siglaSistema
     * @param dadosAssinatura
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "extensaons/assinarDocumento")
    @WebResult(name = "retorno", partName = "retorno")
    public String assinarDocumento(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade,
            @WebParam(name = "DadosAssinatura", partName = "DadosAssinatura")
                    DadosAssinatura dadosAssinatura);

    /**
     * Listar assinantes por unidade
     * 
     * @param identificacaoServico
     * @param idUnidade
     * @param siglaSistema
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.ArrayOfAssinante
     */
    @WebMethod(action = "extensaons/listarAssinantesPorUnidade")
    @WebResult(name = "retorno", partName = "retorno")
    public ArrayOfAssinante listarAssinantesPorUnidade(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade);

    /**
     * Listar documentos por processo
     * 
     * @param identificacaoServico
     * @param idUnidade
     * @param siglaSistema
     * @param idProcedimento
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.ArrayOfRetornoConsultaDocumento
     */
    @WebMethod(action = "extensaons/listarDocumentosPorProcedimento")
    @WebResult(name = "retorno", partName = "retorno")
    public ArrayOfRetornoConsultaDocumento listarDocumentosPorProcedimento(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade,
            @WebParam(name = "IdProcedimento", partName = "IdProcedimento")
                    String idProcedimento);

    /**
     * Autentica um usuario externo. true: autenticado, false: nao autenticado
     * 
     * @param senha
     * @param identificacaoServico
     * @param idUnidade
     * @param permitePendente
     * @param siglaSistema
     * @param login
     * @return
     *     returns boolean
     */
    @WebMethod(action = "extensaons/autenticarUsuarioExterno")
    @WebResult(name = "autenticado", partName = "autenticado")
    public boolean autenticarUsuarioExterno(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade,
            @WebParam(name = "Login", partName = "Login")
                    String login,
            @WebParam(name = "Senha", partName = "Senha")
                    String senha,
            @WebParam(name = "PermitePendente", partName = "PermitePendente")
                    boolean permitePendente);

    /**
     * Busca informações do usuário externo.
     * 
     * @param identificacaoServico
     * @param idUnidade
     * @param siglaSistema
     * @param login
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.DadosUsuarioExterno
     */
    @WebMethod(action = "extensaons/buscarDadosUsuarioExterno")
    @WebResult(name = "dadosUsuarioExterno", partName = "dadosUsuarioExterno")
    public DadosUsuarioExterno buscarDadosUsuarioExterno(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade,
            @WebParam(name = "Login", partName = "Login")
                    String login);

    /**
     * Consultar conteúdo de documento.
     * 
     * @param modeloDocumento
     * @param identificacaoServico
     * @param idDocumento
     * @param idUnidade
     * @param siglaSistema
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.RetornoConsultarConteudoDocumento
     */
    @WebMethod(action = "extensaons/consultarConteudoDocumento")
    @WebResult(name = "conteudoDocumento", partName = "conteudoDocumento")
    public RetornoConsultarConteudoDocumento consultarConteudoDocumento(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdUnidade", partName = "IdUnidade")
                    String idUnidade,
            @WebParam(name = "IdDocumento", partName = "IdDocumento")
                    String idDocumento,
            @WebParam(name = "ModeloDocumento", partName = "ModeloDocumento")
                    boolean modeloDocumento);

    /**
     * Listar Assuntos do SEI.
     * 
     * @param identificacaoServico
     * @param siglaSistema
     * @param strPalavrasPesquisa
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.ArrayOfAssunto
     */
    @WebMethod(action = "extensaons/listarAssuntos")
    @WebResult(name = "retorno", partName = "retorno")
    public ArrayOfAssunto listarAssuntos(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "strPalavrasPesquisa", partName = "strPalavrasPesquisa")
                    String strPalavrasPesquisa);

    /**
     * Busca o link externo para a página do procedimento (processo).
     * 
     * @param identificacaoServico
     * @param siglaSistema
     * @param idProcedimento
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "extensaons/consultarLinkExternoProcedimento")
    @WebResult(name = "linkExterno", partName = "linkExterno")
    public String consultarLinkExternoProcedimento(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "IdProcedimento", partName = "IdProcedimento")
                    String idProcedimento);

    /**
     * Retorna o id de um documento ou procedimento(processo) com base em seu número de protocolo.
     * 
     * @param protocolo
     * @param identificacaoServico
     * @param siglaSistema
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "extensaons/consultarIdProtocolo")
    @WebResult(name = "IdProtocolo", partName = "IdProtocolo")
    public String consultarIdProtocolo(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "Protocolo", partName = "Protocolo")
                    String protocolo);

    /**
     * Retorna os links externos para uma lista de procedimentos.
     * 
     * @param identificacaoServico
     * @param protocolosProcedimentos
     * @param siglaSistema
     * @return
     *     returns org.opensingular.requirement.connector.sei30.extensao.ws.ArrayOfLinkExterno
     */
    @WebMethod(action = "extensaons/consultarLinksExternosProcedimento")
    @WebResult(name = "retorno", partName = "retorno")
    public ArrayOfLinkExterno consultarLinksExternosProcedimento(
            @WebParam(name = "SiglaSistema", partName = "SiglaSistema")
                    String siglaSistema,
            @WebParam(name = "IdentificacaoServico", partName = "IdentificacaoServico")
                    String identificacaoServico,
            @WebParam(name = "ProtocolosProcedimentos", partName = "ProtocolosProcedimentos")
                    ArrayOfProtocoloProcedimento protocolosProcedimentos);

}
