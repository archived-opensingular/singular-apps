
    create table DBSINGULAR.RL_HIST_CONT_REQ_VER_ANOTACAO (
        CO_HISTORICO bigint not null,
        CO_VERSAO_ANOTACAO bigint not null
    );

    create table DBSINGULAR.RL_PAPEL_TAREFA (
        CO_PAPEL_TAREFA integer generated by default as identity,
        CO_DEFINICAO_PAPEL integer not null,
        CO_DEFINICAO_TAREFA integer not null,
        primary key (CO_PAPEL_TAREFA)
    );

    create table DBSINGULAR.RL_PERMISSAO_PROCESSO (
        CO_DEFINICAO_PROCESSO bigint not null,
        TP_PERMISSAO char(255) not null,
        primary key (CO_DEFINICAO_PROCESSO, TP_PERMISSAO),
        check (TP_PERMISSAO IN ('A', 'I', 'C', 'R'))
    );

    create table DBSINGULAR.RL_PERMISSAO_TAREFA (
        CO_PERMISSAO_TAREFA integer generated by default as identity,
        CO_PERMISSAO varchar(500) not null,
        CO_DEFINICAO_TAREFA integer not null,
        primary key (CO_PERMISSAO_TAREFA)
    );

    create table DBSINGULAR.TB_ANEXO_FORMULARIO (
        CO_ARQUIVO bigint not null,
        CO_VERSAO_FORMULARIO bigint not null,
        primary key (CO_ARQUIVO, CO_VERSAO_FORMULARIO)
    );

    create table DBSINGULAR.TB_ANOTACAO_FORMULARIO (
        CO_CHAVE_ANOTACAO varchar(200) not null,
        CO_VERSAO_FORMULARIO bigint not null,
        CO_VERSAO_ANOTACAO_ATUAL bigint,
        primary key (CO_CHAVE_ANOTACAO, CO_VERSAO_FORMULARIO)
    );

    create table DBSINGULAR.TB_ARQUIVO (
        CO_ARQUIVO bigint generated by default as identity,
        CO_CONTEUDO_ARQUIVO bigint not null,
        DT_CRIACAO timestamp not null,
        TX_SHA1 varchar(40) not null,
        NO_ARQUIVO varchar(200) not null,
        NU_BYTES bigint not null,
        primary key (CO_ARQUIVO)
    );

    create table DBSINGULAR.TB_CACHE_CAMPO (
        CO_CACHE_CAMPO bigint generated by default as identity,
        DS_CAMINHO_CAMPO varchar(255),
        CO_TIPO_FORMULARIO bigint,
        primary key (CO_CACHE_CAMPO)
    );

    create table DBSINGULAR.TB_CACHE_VALOR (
        CO_CACHE_VALOR bigint generated by default as identity,
        DT_VALOR timestamp,
        NU_VALOR decimal(19,2),
        DS_VALOR varchar(1024),
        CO_CACHE_CAMPO bigint,
        CO_VERSAO_FORMULARIO bigint,
        CO_PARENT bigint,
        primary key (CO_CACHE_VALOR)
    );

    create table DBSINGULAR.TB_CAIXA (
        CO_CAIXA bigint generated by default as identity,
        DS_CAIXA varchar(500),
        NO_ICONE varchar(100) not null,
        NO_CAIXA varchar(100) not null,
        CO_MODULO varchar(30) not null,
        primary key (CO_CAIXA)
    );

    create table DBSINGULAR.TB_CATEGORIA (
        CO_CATEGORIA integer generated by default as identity,
        NO_CATEGORIA varchar(100) not null,
        primary key (CO_CATEGORIA)
    );

    create table DBSINGULAR.TB_CONTEUDO_ARQUIVO (
        CO_CONTEUDO_ARQUIVO bigint generated by default as identity,
        BL_CONTEUDO blob not null,
        TX_SHA1 varchar(40) not null,
        DT_INCLUSAO timestamp not null,
        NU_BYTES bigint not null,
        primary key (CO_CONTEUDO_ARQUIVO)
    );

    create table DBSINGULAR.TB_DEFINICAO_PAPEL (
        CO_DEFINICAO_PAPEL integer generated by default as identity,
        SG_PAPEL varchar(100) not null,
        NO_PAPEL varchar(300) not null,
        CO_DEFINICAO_PROCESSO integer not null,
        primary key (CO_DEFINICAO_PAPEL)
    );

    create table DBSINGULAR.TB_DEFINICAO_PROCESSO (
        CO_DEFINICAO_PROCESSO integer generated by default as identity,
        NO_CLASSE_JAVA varchar(500) not null,
        SG_PROCESSO varchar(200) not null,
        NO_PROCESSO varchar(200) not null,
        CO_CATEGORIA integer,
        CO_MODULO varchar(30) not null,
        primary key (CO_DEFINICAO_PROCESSO)
    );

    create table DBSINGULAR.TB_DEFINICAO_REQUISICAO (
        CO_DEFINICAO_REQUISICAO bigint generated by default as identity,
        NO_DEFINICAO_REQUISICAO varchar(300) not null,
        CO_TIPO_FORMULARIO bigint not null,
        CO_MODULO varchar(30) not null,
        primary key (CO_DEFINICAO_REQUISICAO)
    );

    create table DBSINGULAR.TB_DEFINICAO_TAREFA (
        CO_DEFINICAO_TAREFA integer generated by default as identity,
        SG_TAREFA varchar(100) not null,
        TP_ESTRATEGIA_SEGURANCA varchar(1),
        CO_DEFINICAO_PROCESSO integer not null,
        primary key (CO_DEFINICAO_TAREFA),
        check (TP_ESTRATEGIA_SEGURANCA IS NULL OR (TP_ESTRATEGIA_SEGURANCA IN ('D','E')))
    );

    create table DBSINGULAR.TB_DESTINATARIO_EMAIL (
        CO_DESTINATARIO_EMAIL bigint generated by default as identity,
        TX_ENDERECO varchar(100) not null,
        TP_ENVIO varchar(3) not null,
        DT_ENVIO timestamp,
        CO_EMAIL bigint not null,
        primary key (CO_DESTINATARIO_EMAIL),
        check (TP_ENVIO IN ('To','Cc','Bcc'))
    );

    create table DBSINGULAR.TB_EMAIL (
        CO_EMAIL bigint generated by default as identity,
        TX_CONTEUDO clob not null,
        DT_CRIACAO timestamp not null,
        TX_RESPONDER_PARA varchar(200),
        TX_ASSUNTO varchar(200) not null,
        primary key (CO_EMAIL)
    );

    create table DBSINGULAR.TB_EMAIL_ARQUIVO (
        CO_EMAIL bigint not null,
        CO_ARQUIVO bigint not null
    );

    create table DBSINGULAR.TB_FORMULARIO (
        CO_FORMULARIO bigint generated by default as identity,
        CO_VERSAO_ATUAL bigint,
        CO_TIPO_FORMULARIO bigint not null,
        primary key (CO_FORMULARIO)
    );

    create table DBSINGULAR.TB_FORMULARIO_REQUISICAO (
        CO_FORMULARIO_REQUISICAO bigint generated by default as identity,
        ST_FORM_PRINCIPAL varchar(1) not null,
        CO_RASCUNHO_ATUAL bigint,
        CO_FORMULARIO bigint,
        CO_REQUISICAO bigint not null,
        CO_DEFINICAO_TAREFA integer,
        primary key (CO_FORMULARIO_REQUISICAO),
        check (ST_FORM_PRINCIPAL IN ('S','N'))
    );

    create table DBSINGULAR.TB_FUNCIONALIDADE_REQUISICAO (
        CO_FUNCIONALIDADE varchar(300) not null,
        CO_MODULO_SINGULAR varchar(50) not null,
        CO_PERMISSAO varchar(50) not null,
        primary key (CO_FUNCIONALIDADE, CO_MODULO_SINGULAR, CO_PERMISSAO)
    );

    create table DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC (
        CO_HISTORICO bigint generated by default as identity,
        DT_HISTORICO timestamp not null,
        CO_AUTOR integer,
        CO_REQUISITANTE bigint,
        CO_REQUISICAO bigint not null,
        CO_INSTANCIA_TAREFA integer,
        primary key (CO_HISTORICO)
    );

    create table DBSINGULAR.TB_HISTORICO_INSTANCIA_TAREFA (
        CO_HISTORICO_ALOCACAO integer generated by default as identity,
        DT_INICIO_ALOCACAO timestamp not null,
        DS_COMPLEMENTO varchar(8000),
        DT_FIM_ALOCACAO timestamp,
        CO_ATOR_ALOCADO integer,
        CO_ATOR_ALOCADOR integer,
        CO_INSTANCIA_TAREFA integer not null,
        CO_TIPO_HISTORICO_TAREFA integer not null,
        primary key (CO_HISTORICO_ALOCACAO)
    );

    create table DBSINGULAR.TB_HISTORICO_VERSAO_FORMULARIO (
        CO_VERSAO_FORMULARIO bigint not null,
        CO_HISTORICO bigint not null,
        ST_FORM_PRINCIPAL varchar(1) not null,
        primary key (CO_VERSAO_FORMULARIO, CO_HISTORICO)
    );

    create table DBSINGULAR.TB_INSTANCIA_PAPEL (
        CO_INSTANCIA_PAPEL integer generated by default as identity,
        DT_CRIACAO timestamp not null,
        CO_ATOR_ALOCADOR integer,
        CO_INSTANCIA_PROCESSO integer not null,
        CO_DEFINICAO_PAPEL integer not null,
        CO_ATOR integer not null,
        primary key (CO_INSTANCIA_PAPEL)
    );

    create table DBSINGULAR.TB_INSTANCIA_PROCESSO (
        CO_INSTANCIA_PROCESSO integer generated by default as identity,
        DT_INICIO timestamp not null,
        DS_INSTANCIA_PROCESSO varchar(300),
        DT_FIM timestamp,
        CO_VERSAO_PROCESSO integer not null,
        CO_INSTANCIA_TAREFA_PAI integer,
        CO_ATOR_CRIADOR integer,
        primary key (CO_INSTANCIA_PROCESSO)
    );

    create table DBSINGULAR.TB_INSTANCIA_TAREFA (
        CO_INSTANCIA_TAREFA integer generated by default as identity,
        DT_INICIO timestamp not null,
        DT_FIM timestamp,
        DT_ESPERADA_FIM timestamp,
        NU_VERSAO integer,
        CO_ATOR_ALOCADO integer,
        CO_VERSAO_TRANSICAO_EXECUTADA integer,
        CO_INSTANCIA_PROCESSO integer not null,
        CO_ATOR_CONCLUSAO integer,
        CO_VERSAO_TAREFA integer not null,
        primary key (CO_INSTANCIA_TAREFA)
    );

    create table DBSINGULAR.TB_MODULO (
        CO_MODULO varchar(30) not null,
        URL_CONEXAO varchar(300) not null,
        NO_MODULO varchar(100) not null,
        primary key (CO_MODULO)
    );

    create table DBSINGULAR.TB_PARAMETRO (
        CO_PARAMETRO bigint generated by default as identity,
        NO_PARAMETRO varchar(100) not null,
        VL_PARAMETRO varchar(1000) not null,
        CO_MODULO varchar(30) not null,
        primary key (CO_PARAMETRO)
    );

    create table DBSINGULAR.TB_RASCUNHO (
        CO_RASCUNHO bigint generated by default as identity,
        DT_EDICAO timestamp not null,
        DT_INICIO timestamp not null,
        CO_FORMULARIO bigint not null,
        primary key (CO_RASCUNHO)
    );

    create table DBSINGULAR.TB_REQUISICAO (
        CO_REQUISICAO bigint generated by default as identity,
        DS_REQUISICAO varchar(200),
        CO_REQUISITANTE bigint,
        CO_DEFINICAO_PROCESSO integer,
        CO_INSTANCIA_PROCESSO integer,
        CO_REQUISICAO_PAI bigint,
        CO_DEFINICAO_REQUISICAO bigint not null,
        CO_REQUISICAO_RAIZ bigint,
        primary key (CO_REQUISICAO)
    );

    create table DBSINGULAR.TB_REQUISITANTE (
        CO_REQUISITANTE bigint generated by default as identity,
        NU_CPF_CNPJ varchar(14),
        ID_PESSOA varchar(200) not null,
        DS_NOME varchar(200) not null,
        TP_PESSOA varchar(1) default 'J' not null,
        primary key (CO_REQUISITANTE),
        check (TP_PESSOA IN ('J','F'))
    );

    create table DBSINGULAR.TB_TIPO_FORMULARIO (
        CO_TIPO_FORMULARIO bigint generated by default as identity,
        SG_TIPO_FORMULARIO varchar(200) not null,
        NU_VERSAO_CACHE bigint not null,
        NO_LABEL_FORMULARIO varchar(200),
        primary key (CO_TIPO_FORMULARIO)
    );

    create table DBSINGULAR.TB_TIPO_HISTORICO_TAREFA (
        CO_TIPO_HISTORICO_TAREFA integer generated by default as identity,
        DS_TIPO_HISTORICO_TAREFA varchar(100) not null,
        primary key (CO_TIPO_HISTORICO_TAREFA)
    );

    create table DBSINGULAR.TB_TIPO_VARIAVEL (
        CO_TIPO_VARIAVEL integer generated by default as identity,
        DS_TIPO_VARIAVEL varchar(100) not null,
        NO_CLASSE_JAVA varchar(300) not null,
        primary key (CO_TIPO_VARIAVEL)
    );

    create table DBSINGULAR.TB_VARIAVEL (
        CO_VARIAVEL integer generated by default as identity,
        NO_VARIAVEL varchar(100) not null,
        VL_VARIAVEL clob,
        CO_INSTANCIA_PROCESSO integer not null,
        CO_TIPO_VARIAVEL integer not null,
        primary key (CO_VARIAVEL)
    );

    create table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO (
        CO_VARIAVEL_EXECUCAO_TRANSICAO integer generated by default as identity,
        DT_HISTORICO timestamp not null,
        NO_VARIAVEL varchar(100) not null,
        VL_NOVO varchar(8000),
        CO_INSTANCIA_TAREFA_DESTINO integer not null,
        CO_INSTANCIA_PROCESSO integer not null,
        CO_INSTANCIA_TAREFA_ORIGEM integer not null,
        CO_TIPO_VARIAVEL integer not null,
        CO_VARIAVEL integer,
        primary key (CO_VARIAVEL_EXECUCAO_TRANSICAO)
    );

    create table DBSINGULAR.TB_VERSAO_ANOTACAO_FORMULARIO (
        CO_VERSAO_ANOTACAO bigint generated by default as identity,
        CO_AUTOR_INCLUSAO integer,
        DT_INCLUSAO timestamp not null,
        XML_ANOTACAO clob not null,
        CO_CHAVE_ANOTACAO varchar(200) not null,
        CO_VERSAO_FORMULARIO bigint not null,
        primary key (CO_VERSAO_ANOTACAO)
    );

    create table DBSINGULAR.TB_VERSAO_FORMULARIO (
        CO_VERSAO_FORMULARIO bigint generated by default as identity,
        NU_VERSAO_CACHE bigint,
        CO_AUTOR_INCLUSAO integer,
        DT_INCLUSAO timestamp not null,
        ST_INDEXADO char(255),
        XML_CONTEUDO clob not null,
        CO_FORMULARIO bigint not null,
        primary key (CO_VERSAO_FORMULARIO)
    );

    create table DBSINGULAR.TB_VERSAO_PROCESSO (
        CO_VERSAO_PROCESSO integer generated by default as identity,
        DT_VERSAO timestamp not null,
        CO_DEFINICAO_PROCESSO integer not null,
        primary key (CO_VERSAO_PROCESSO)
    );

    create table DBSINGULAR.TB_VERSAO_TAREFA (
        CO_VERSAO_TAREFA integer generated by default as identity,
        NO_TAREFA varchar(300) not null,
        CO_TIPO_TAREFA integer not null,
        CO_VERSAO_PROCESSO integer not null,
        CO_DEFINICAO_TAREFA integer not null,
        primary key (CO_VERSAO_TAREFA)
    );

    create table DBSINGULAR.TB_VERSAO_TRANSICAO (
        CO_VERSAO_TRANSICAO integer generated by default as identity,
        SG_TRANSICAO varchar(100) not null,
        NO_TRANSICAO varchar(300) not null,
        TP_TRANSICAO varchar(1) default 'E' not null,
        CO_VERSAO_TAREFA_DESTINO integer not null,
        CO_VERSAO_TAREFA_ORIGEM integer not null,
        primary key (CO_VERSAO_TRANSICAO)
    );

    alter table DBSINGULAR.RL_HIST_CONT_REQ_VER_ANOTACAO
        add constraint UK_HIST_CONT_REQ_VER_ANOT unique (CO_VERSAO_ANOTACAO, CO_HISTORICO);

    create index IX_CLASSE_DEFINICAO on DBSINGULAR.TB_DEFINICAO_PROCESSO (NO_CLASSE_JAVA asc);

    create index TB_DEFINICAO_REQUISICAO on DBSINGULAR.TB_DEFINICAO_REQUISICAO (CO_MODULO asc, NO_DEFINICAO_REQUISICAO asc);

    alter table DBSINGULAR.TB_EMAIL_ARQUIVO
        add constraint UK_EMAIL_ARQUIVO unique (CO_ARQUIVO);

    create index IX_FORMULARIO_PRINCIPAL on DBSINGULAR.TB_FORMULARIO_REQUISICAO (ST_FORM_PRINCIPAL asc, CO_REQUISICAO asc);

    create index IX_HISTORICO_INSTANCIA_TAREFA on DBSINGULAR.TB_HISTORICO_INSTANCIA_TAREFA (CO_INSTANCIA_TAREFA asc, DT_INICIO_ALOCACAO asc);

    create index IX_INSTANCIA_PROCESSO on DBSINGULAR.TB_INSTANCIA_PROCESSO (CO_VERSAO_PROCESSO asc, DT_INICIO asc);

    create index IX_GRUPO_NOME on DBSINGULAR.TB_MODULO (NO_MODULO asc);

    create index IX_GRUPO_CONEXAO on DBSINGULAR.TB_MODULO (URL_CONEXAO asc);

    create index IX_PARAMETRO on DBSINGULAR.TB_PARAMETRO (CO_MODULO asc, NO_PARAMETRO asc);

    create index IX_TIPO_FORMULARIO on DBSINGULAR.TB_TIPO_FORMULARIO (SG_TIPO_FORMULARIO asc);

    create index IX_PROCESSO on DBSINGULAR.TB_VERSAO_PROCESSO (CO_DEFINICAO_PROCESSO asc, DT_VERSAO asc);

    alter table DBSINGULAR.RL_HIST_CONT_REQ_VER_ANOTACAO
        add constraint FK_VER_ANOTACAO_HIST_CONT_REQ
        foreign key (CO_VERSAO_ANOTACAO)
        references DBSINGULAR.TB_VERSAO_ANOTACAO_FORMULARIO;

    alter table DBSINGULAR.RL_HIST_CONT_REQ_VER_ANOTACAO
        add constraint FK_HIST_CONT_REQ_VER_ANOTACAO
        foreign key (CO_HISTORICO)
        references DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC;

    alter table DBSINGULAR.RL_PAPEL_TAREFA
        add constraint FK_PPL_TAR_DEFINICAO_PAPEL
        foreign key (CO_DEFINICAO_PAPEL)
        references DBSINGULAR.TB_DEFINICAO_PAPEL;

    alter table DBSINGULAR.RL_PAPEL_TAREFA
        add constraint FK_PPL_TAR_DEFINICAO_TAREFA
        foreign key (CO_DEFINICAO_TAREFA)
        references DBSINGULAR.TB_DEFINICAO_TAREFA;

    alter table DBSINGULAR.RL_PERMISSAO_PROCESSO
        add constraint FK_PERM_PROCES_DEFI_PROCES
        foreign key (CO_DEFINICAO_PROCESSO)
        references DBSINGULAR.TB_DEFINICAO_PROCESSO;

    alter table DBSINGULAR.RL_PERMISSAO_TAREFA
        add constraint FK_PERM_TAR_DEFINICAO_TAREFA
        foreign key (CO_DEFINICAO_TAREFA)
        references DBSINGULAR.TB_DEFINICAO_TAREFA;

    alter table DBSINGULAR.TB_ANEXO_FORMULARIO
        add constraint FK_ANX_FORM_CO_ARQUIVO
        foreign key (CO_ARQUIVO)
        references DBSINGULAR.TB_ARQUIVO;

    alter table DBSINGULAR.TB_ANEXO_FORMULARIO
        add constraint FK_ANX_FORM_VERSAO_FORMULARIO
        foreign key (CO_VERSAO_FORMULARIO)
        references DBSINGULAR.TB_VERSAO_FORMULARIO;

    alter table DBSINGULAR.TB_ANOTACAO_FORMULARIO
        add constraint FK_ANOT_FORM_VERSAO_FORMULARIO
        foreign key (CO_VERSAO_FORMULARIO)
        references DBSINGULAR.TB_VERSAO_FORMULARIO;

    alter table DBSINGULAR.TB_ANOTACAO_FORMULARIO
        add constraint FK_ANOT_FORM_VER_ANOT_ATUAL
        foreign key (CO_VERSAO_ANOTACAO_ATUAL)
        references DBSINGULAR.TB_VERSAO_ANOTACAO_FORMULARIO;

    alter table DBSINGULAR.TB_CACHE_CAMPO
        add constraint FK_CACHE_CAMPO_TIPO_FORMULARIO
        foreign key (CO_TIPO_FORMULARIO)
        references DBSINGULAR.TB_TIPO_FORMULARIO;

    alter table DBSINGULAR.TB_CACHE_VALOR
        add constraint FK_CACHE_VALOR_CACHE_CAMPO
        foreign key (CO_CACHE_CAMPO)
        references DBSINGULAR.TB_CACHE_CAMPO;

    alter table DBSINGULAR.TB_CACHE_VALOR
        add constraint FK_CACHE_VAL_VERSAO_FORMULARIO
        foreign key (CO_VERSAO_FORMULARIO)
        references DBSINGULAR.TB_VERSAO_FORMULARIO;

    alter table DBSINGULAR.TB_CACHE_VALOR
        add constraint FK_CACHE_VALOR_CO_PARENT
        foreign key (CO_PARENT)
        references DBSINGULAR.TB_CACHE_VALOR;

    alter table DBSINGULAR.TB_CAIXA
        add constraint FK_CAIXA_CO_MODULO
        foreign key (CO_MODULO)
        references DBSINGULAR.TB_MODULO;

    alter table DBSINGULAR.TB_DEFINICAO_PAPEL
        add constraint FK_DEFI_PPL_DEFINICAO_PROCESSO
        foreign key (CO_DEFINICAO_PROCESSO)
        references DBSINGULAR.TB_DEFINICAO_PROCESSO;

    alter table DBSINGULAR.TB_DEFINICAO_PROCESSO
        add constraint FK_DEFIN_PROCES_CATEGORIA
        foreign key (CO_CATEGORIA)
        references DBSINGULAR.TB_CATEGORIA;

    alter table DBSINGULAR.TB_DEFINICAO_PROCESSO
        add constraint FK_DEFIN_PROCES_MODULO
        foreign key (CO_MODULO)
        references DBSINGULAR.TB_MODULO;

    alter table DBSINGULAR.TB_DEFINICAO_REQUISICAO
        add constraint FK_DEFI_REQ_TIPO_FORMULARIO
        foreign key (CO_TIPO_FORMULARIO)
        references DBSINGULAR.TB_TIPO_FORMULARIO;

    alter table DBSINGULAR.TB_DEFINICAO_REQUISICAO
        add constraint FK_DEFI_REQ_MODULO
        foreign key (CO_MODULO)
        references DBSINGULAR.TB_MODULO;

    alter table DBSINGULAR.TB_DEFINICAO_TAREFA
        add constraint FK_DEFI_TAR_DEFINICAO_PROCESSO
        foreign key (CO_DEFINICAO_PROCESSO)
        references DBSINGULAR.TB_DEFINICAO_PROCESSO;

    alter table DBSINGULAR.TB_DESTINATARIO_EMAIL
        add constraint FK_DESTINATARIO_EMAIL_CO_EMAIL
        foreign key (CO_EMAIL)
        references DBSINGULAR.TB_EMAIL;

    alter table DBSINGULAR.TB_EMAIL_ARQUIVO
        add constraint FK_EMAIL_ARQUIVO_ARQUIVO
        foreign key (CO_ARQUIVO)
        references DBSINGULAR.TB_ARQUIVO;

    alter table DBSINGULAR.TB_EMAIL_ARQUIVO
        add constraint FK_EMAIL_ARQUIVO_EMAIL
        foreign key (CO_EMAIL)
        references DBSINGULAR.TB_EMAIL;

    alter table DBSINGULAR.TB_FORMULARIO
        add constraint FK_FORMULARIO_VERSAO_ATUAL
        foreign key (CO_VERSAO_ATUAL)
        references DBSINGULAR.TB_VERSAO_FORMULARIO;

    alter table DBSINGULAR.TB_FORMULARIO
        add constraint FK_FORMULARIO_TIPO_FORMULARIO
        foreign key (CO_TIPO_FORMULARIO)
        references DBSINGULAR.TB_TIPO_FORMULARIO;

    alter table DBSINGULAR.TB_FORMULARIO_REQUISICAO
        add constraint FK_FORM_REQ_RASCUNHO_ATUAL
        foreign key (CO_RASCUNHO_ATUAL)
        references DBSINGULAR.TB_RASCUNHO;

    alter table DBSINGULAR.TB_FORMULARIO_REQUISICAO
        add constraint FK_FORM_REQ_FORMULARIO
        foreign key (CO_FORMULARIO)
        references DBSINGULAR.TB_FORMULARIO;

    alter table DBSINGULAR.TB_FORMULARIO_REQUISICAO
        add constraint FK_FORMO_REQ_REQUISICAO
        foreign key (CO_REQUISICAO)
        references DBSINGULAR.TB_REQUISICAO;

    alter table DBSINGULAR.TB_FORMULARIO_REQUISICAO
        add constraint FK_FORM_REQ_DEFINICAO_TAREFA
        foreign key (CO_DEFINICAO_TAREFA)
        references DBSINGULAR.TB_DEFINICAO_TAREFA;

    alter table DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC
        add constraint FK_HIST_CTD_REQ_REQUISITANTE
        foreign key (CO_REQUISITANTE)
        references DBSINGULAR.TB_REQUISITANTE;

    alter table DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC
        add constraint FK_HIST_CTD_REQ_REQ
        foreign key (CO_REQUISICAO)
        references DBSINGULAR.TB_REQUISICAO;

    alter table DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC
        add constraint FK_HIST_CTD_REQ_INSTANCIA_TRF
        foreign key (CO_INSTANCIA_TAREFA)
        references DBSINGULAR.TB_INSTANCIA_TAREFA;

    alter table DBSINGULAR.TB_HISTORICO_INSTANCIA_TAREFA
        add constraint FK_HIST_INST_TAR_INST_TAR
        foreign key (CO_INSTANCIA_TAREFA)
        references DBSINGULAR.TB_INSTANCIA_TAREFA;

    alter table DBSINGULAR.TB_HISTORICO_INSTANCIA_TAREFA
        add constraint FK_HIST_INST_TAR_TP_HIST_TAR
        foreign key (CO_TIPO_HISTORICO_TAREFA)
        references DBSINGULAR.TB_TIPO_HISTORICO_TAREFA;

    alter table DBSINGULAR.TB_HISTORICO_VERSAO_FORMULARIO
        add constraint FK_HIST_VER_FORM_VER_FORM
        foreign key (CO_VERSAO_FORMULARIO)
        references DBSINGULAR.TB_VERSAO_FORMULARIO;

    alter table DBSINGULAR.TB_HISTORICO_VERSAO_FORMULARIO
        add constraint FK_HIST_VER_FORM_HISTORICO
        foreign key (CO_HISTORICO)
        references DBSINGULAR.TB_HISTORICO_CONTEUDO_REQUISIC;

    alter table DBSINGULAR.TB_INSTANCIA_PAPEL
        add constraint FK_INST_PPL_INSTANCIA_PROCESSO
        foreign key (CO_INSTANCIA_PROCESSO)
        references DBSINGULAR.TB_INSTANCIA_PROCESSO;

    alter table DBSINGULAR.TB_INSTANCIA_PAPEL
        add constraint FK_INST_PPL_DEFINICAO_PAPEL
        foreign key (CO_DEFINICAO_PAPEL)
        references DBSINGULAR.TB_DEFINICAO_PAPEL;

    alter table DBSINGULAR.TB_INSTANCIA_PROCESSO
        add constraint FK_INST_PROCES_VERSAO_PROCESSO
        foreign key (CO_VERSAO_PROCESSO)
        references DBSINGULAR.TB_VERSAO_PROCESSO;

    alter table DBSINGULAR.TB_INSTANCIA_PROCESSO
        add constraint FK_INST_PROCES_INST_TAR_PAI
        foreign key (CO_INSTANCIA_TAREFA_PAI)
        references DBSINGULAR.TB_INSTANCIA_TAREFA;

    alter table DBSINGULAR.TB_INSTANCIA_TAREFA
        add constraint FK_INST_TAR_VER_TRAN_EXEC
        foreign key (CO_VERSAO_TRANSICAO_EXECUTADA)
        references DBSINGULAR.TB_VERSAO_TRANSICAO;

    alter table DBSINGULAR.TB_INSTANCIA_TAREFA
        add constraint FK_INST_TAR_PROCES_ATOR_CRIDR
        foreign key (CO_INSTANCIA_PROCESSO)
        references DBSINGULAR.TB_INSTANCIA_PROCESSO;

    alter table DBSINGULAR.TB_INSTANCIA_TAREFA
        add constraint FK_INST_TAR_VERSAO_TAREFA
        foreign key (CO_VERSAO_TAREFA)
        references DBSINGULAR.TB_VERSAO_TAREFA;

    alter table DBSINGULAR.TB_PARAMETRO
        add constraint FK_PARAMETRO_MODULO
        foreign key (CO_MODULO)
        references DBSINGULAR.TB_MODULO;

    alter table DBSINGULAR.TB_RASCUNHO
        add constraint FK_RASCUNHO_FORMULARIO
        foreign key (CO_FORMULARIO)
        references DBSINGULAR.TB_FORMULARIO;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_REQUISITANTE
        foreign key (CO_REQUISITANTE)
        references DBSINGULAR.TB_REQUISITANTE;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_DEFINICAO_PROCESSO
        foreign key (CO_DEFINICAO_PROCESSO)
        references DBSINGULAR.TB_DEFINICAO_PROCESSO;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_INSTANCIA_PROCESSO
        foreign key (CO_INSTANCIA_PROCESSO)
        references DBSINGULAR.TB_INSTANCIA_PROCESSO;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_REQUISICAO_PAI
        foreign key (CO_REQUISICAO_PAI)
        references DBSINGULAR.TB_REQUISICAO;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_DEFINICAO_REQUISICAO
        foreign key (CO_DEFINICAO_REQUISICAO)
        references DBSINGULAR.TB_DEFINICAO_REQUISICAO;

    alter table DBSINGULAR.TB_REQUISICAO
        add constraint FK_REQ_REQUISICAO_RAIZ
        foreign key (CO_REQUISICAO_RAIZ)
        references DBSINGULAR.TB_REQUISICAO;

    alter table DBSINGULAR.TB_VARIAVEL
        add constraint FK_VARIAVEL_INSTANCIA_PROCESSO
        foreign key (CO_INSTANCIA_PROCESSO)
        references DBSINGULAR.TB_INSTANCIA_PROCESSO;

    alter table DBSINGULAR.TB_VARIAVEL
        add constraint FK_VARIAVEL_TIPO_VARIAVEL
        foreign key (CO_TIPO_VARIAVEL)
        references DBSINGULAR.TB_TIPO_VARIAVEL;

    alter table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO
        add constraint FK_VAR_EXEC_TRANS_DEST
        foreign key (CO_INSTANCIA_TAREFA_DESTINO)
        references DBSINGULAR.TB_INSTANCIA_TAREFA;

    alter table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO
        add constraint FK_VAR_EXEC_TRANS_INST_PROCES
        foreign key (CO_INSTANCIA_PROCESSO)
        references DBSINGULAR.TB_INSTANCIA_PROCESSO;

    alter table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO
        add constraint FK_VAR_EXEC_TRANS_TAR_ORIGEM
        foreign key (CO_INSTANCIA_TAREFA_ORIGEM)
        references DBSINGULAR.TB_INSTANCIA_TAREFA;

    alter table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO
        add constraint FK_VAR_EXEC_TRANS_TP_VAR
        foreign key (CO_TIPO_VARIAVEL)
        references DBSINGULAR.TB_TIPO_VARIAVEL;

    alter table DBSINGULAR.TB_VARIAVEL_EXECUCAO_TRANSICAO
        add constraint FK_VAR_EXEC_TRANS_VAR
        foreign key (CO_VARIAVEL)
        references DBSINGULAR.TB_VARIAVEL;

    alter table DBSINGULAR.TB_VERSAO_ANOTACAO_FORMULARIO
        add constraint FK_VER_ANOT_FORM_CHV_ANOT
        foreign key (CO_CHAVE_ANOTACAO, CO_VERSAO_FORMULARIO)
        references DBSINGULAR.TB_ANOTACAO_FORMULARIO;

    alter table DBSINGULAR.TB_VERSAO_FORMULARIO
        add constraint FK_VER_FORM_FORMULARIO
        foreign key (CO_FORMULARIO)
        references DBSINGULAR.TB_FORMULARIO;

    alter table DBSINGULAR.TB_VERSAO_PROCESSO
        add constraint FK_VER_PROCES_DEFI_PROCES
        foreign key (CO_DEFINICAO_PROCESSO)
        references DBSINGULAR.TB_DEFINICAO_PROCESSO;

    alter table DBSINGULAR.TB_VERSAO_TAREFA
        add constraint FK_VER_TAR_VERSAO_PROCESSO
        foreign key (CO_VERSAO_PROCESSO)
        references DBSINGULAR.TB_VERSAO_PROCESSO;

    alter table DBSINGULAR.TB_VERSAO_TAREFA
        add constraint FK_VER_TAR_DEFINICAO_TAREFA
        foreign key (CO_DEFINICAO_TAREFA)
        references DBSINGULAR.TB_DEFINICAO_TAREFA;

    alter table DBSINGULAR.TB_VERSAO_TRANSICAO
        add constraint FK_VER_TRANS_VER_TAR_DEST
        foreign key (CO_VERSAO_TAREFA_DESTINO)
        references DBSINGULAR.TB_VERSAO_TAREFA;

    alter table DBSINGULAR.TB_VERSAO_TRANSICAO
        add constraint FK_VER_TRANS_VER_TAR_ORIG
        foreign key (CO_VERSAO_TAREFA_ORIGEM)
        references DBSINGULAR.TB_VERSAO_TAREFA;
CREATE ALIAS dateDiffInDays FOR "org.opensingular.lib.support.persistence.util.H2Functions.dateDiffInDays";
CREATE TABLE dbo.Operador (
  Cod_Operador   INT IDENTITY CONSTRAINT PK_Operador PRIMARY KEY,
  Nome_Operador  VARCHAR(10) NOT NULL CONSTRAINT Operador_Nome_UKUNIQUE,
  Cod_Grupo      INT,
  Ind_Ativo      CHAR(1)     NOT NULL,
  Senha_Operador VARCHAR(300),
  Inscricao      INT,
  Cod_Setor      INT,
  Versao         INT         NOT NULL
);
CREATE TABLE SCH_LEGADO.TB_Pessoa (
  PK_PESSOA INT IDENTITY,
  INSCRICAO INT,
  NOME VARCHAR(80),
  CPF VARCHAR(11),
  CONSTRAINT PK_Pessoa PRIMARY KEY (PK_Pessoa)
);

CREATE TABLE dbo.Ocorrencia (
  Numero_Ocorrencia    INT IDENTITY CONSTRAINT PK_Ocorrencia_1__13 PRIMARY KEY,
  Data_Ocorrencia      DATE NOT NULL,
  codigo_Ocorrencia    SMALLINT,
  Resp_Ocorrencia      VARCHAR(25)   NOT NULL,
  Inscricao            INT           NOT NULL,
  Descricao_Ocorrencia VARCHAR(200)  NOT NULL,
  Restricao            CHAR(1)
);

CREATE TABLE dbo.Movimento (
  Sequencial INT IDENTITY PRIMARY KEY,
  Proposta INT,
  Inscricao INT,
  Valor NUMERIC(10,2),
  Data_Movim DATE,
  Data_Contabil DATE,
  Comprovado char(1)
);CREATE TABLE DBSINGULAR.TB_ATOR (
   CO_ATOR  BIGINT       IDENTITY,
   CO_USUARIO           VARCHAR(60)          NOT NULL,
  CONSTRAINT PK_ATOR PRIMARY KEY (CO_ATOR)
);

CREATE VIEW DBSINGULAR.VW_ATOR AS SELECT A.CO_ATOR, A.CO_USUARIO as "CO_USUARIO", A.CO_USUARIO  as "NO_ATOR", ' ' as "DS_EMAIL" FROM DBSINGULAR.TB_ATOR A;

    create table DBSINGULAR.RL_HIST_CONT_REQ_VER_ANOTACAO (
        CO_HISTORICO bigint not null,
        CO_VERSAO_ANOTACAO bigint not null
    );CREATE TABLE SCH_JUDICIAL.TB_UF (
  PK_UF INT IDENTITY NOT NULL,
  Nome VARCHAR(20) NOT NULL,
  Sigla CHAR(2) NOT NULL,
  CONSTRAINT PK_UF PRIMARY KEY (PK_UF)
);

CREATE TABLE SCH_JUDICIAL.TB_TabelaHonorario (
  PK_TabelaHonorario INT IDENTITY NOT NULL,
  Descricao VARCHAR(200) NOT NULL,
  Ativo BIT,
  DataInicio DATE,
  DataFim DATE,
  CONSTRAINT PK_TabelaHonorario PRIMARY KEY (PK_TabelaHonorario)
);

CREATE TABLE SCH_JUDICIAL.TB_AtoProcessual (
  PK_AtoProcessual INT IDENTITY NOT NULL,
  Nome VARCHAR(200) NOT NULL,
  Ativo BIT NOT NULL,
  CONSTRAINT PK_AtoProcessual PRIMARY KEY (PK_AtoProcessual)
);

CREATE TABLE SCH_JUDICIAL.TB_TipoAcao (
  PK_TipoAcao INT IDENTITY NOT NULL,
  Nome VARCHAR(200) NOT NULL,
  Ativo BIT NOT NULL,
  CONSTRAINT PK_TipoAcao PRIMARY KEY (PK_TipoAcao)
);

CREATE TABLE SCH_JUDICIAL.TB_Vara (
  PK_Vara INT IDENTITY NOT NULL,
  Nome VARCHAR(200) NOT NULL,
  Ativo BIT NOT NULL,
  CONSTRAINT PK_Vara PRIMARY KEY (PK_Vara)
);

CREATE TABLE SCH_JUDICIAL.TB_FaseProcessual (
  PK_FaseProcessual INT IDENTITY NOT NULL,
  Nome VARCHAR(200) NOT NULL,
  Ativo BIT NOT NULL,
  CONSTRAINT PK_FaseProcessual PRIMARY KEY (PK_FaseProcessual)
);

CREATE TABLE SCH_JUDICIAL.TB_Honorario (
  PK_Honorario INT IDENTITY NOT NULL,
  Valor NUMERIC(10,4),
  FK_TabelaHonorario INT NOT NULL,
  FK_AtoProcessual INT,
  Ativo BIT NOT NULL,
  CONSTRAINT PK_Honorario PRIMARY KEY (PK_Honorario),
  CONSTRAINT FK_TabelaHonorario_TB_Honorario_TB_TabelaHonorario FOREIGN KEY (FK_TabelaHonorario) REFERENCES SCH_JUDICIAL.TB_TabelaHonorario (PK_TabelaHonorario),
  CONSTRAINT FK_TabelaHonorario_TB_Honorario_TB_AtoProcessual FOREIGN KEY (FK_AtoProcessual) REFERENCES SCH_JUDICIAL.TB_AtoProcessual (PK_AtoProcessual)
);

CREATE TABLE SCH_JUDICIAL.TB_Endereco (
  PK_Endereco INT IDENTITY NOT NULL,
  Cep VARCHAR(8),-- NOT NULL,
  Logradouro VARCHAR(100),-- NOT NULL,
  Numero VARCHAR(10),-- NOT NULL,
  Complemento VARCHAR(100),
  Bairro VARCHAR(100),-- NOT NULL,
  Cidade VARCHAR(100),-- NOT NULL,
  FK_UF INT,
  CONSTRAINT PK_Endereco PRIMARY KEY (PK_Endereco),
  CONSTRAINT FK_UF_TB_Endereco_TB_UF FOREIGN KEY (FK_UF) REFERENCES SCH_JUDICIAL.TB_UF (PK_UF)
);

CREATE TABLE SCH_JUDICIAL.TB_PessoaJudicial (
  PK_PessoaJudicial INT IDENTITY NOT NULL,
  TipoPessoa VARCHAR(10),
  Nome VARCHAR(100),
  Cpf VARCHAR(11),
  RazaoSocial VARCHAR(100),
  Cnpj VARCHAR(14),
  Filiacao VARCHAR(100),
  Rg VARCHAR(20),
  EstadoCivil VARCHAR(10),
  Profissao VARCHAR(100),
  Telefone VARCHAR(15),
  Email VARCHAR(100),
  FK_Endereco INT,
  Ativo BIT,
  CONSTRAINT PK_Pessoa PRIMARY KEY (PK_PessoaJudicial),
  CONSTRAINT FK_Endereco_TB_PessoaJudicial_TB_Endereco FOREIGN KEY (FK_Endereco) REFERENCES SCH_JUDICIAL.TB_Endereco (PK_Endereco)
);

CREATE TABLE SCH_JUDICIAL.TB_Advogado (
  PK_Advogado INT IDENTITY NOT NULL,
  Nome VARCHAR(100) NOT NULL,
  Telefone VARCHAR(15),
  Email VARCHAR(100),
  Banco VARCHAR(100),
  Agencia VARCHAR(10),
  Conta VARCHAR(10),
  RegistroOAB VARCHAR(30) NOT NULL,
  FK_Endereco INT,
  FK_UFOAB INT,
  FK_Operador INT,
  ATIVO BIT NOT NULL,
  CONSTRAINT PK_Advogado PRIMARY KEY (PK_Advogado),
  CONSTRAINT FK_Endereco_TB_Advogado_TB_Endereco FOREIGN KEY (FK_Endereco) REFERENCES SCH_JUDICIAL.TB_Endereco (PK_Endereco),
  CONSTRAINT FK_UFOAB_TB_Advogado_TB_UF FOREIGN KEY (FK_UFOAB) REFERENCES SCH_JUDICIAL.TB_UF (PK_UF)
);

CREATE TABLE SCH_JUDICIAL.TB_Processo (
  -- Dados básicos
  PK_Processo INT IDENTITY NOT NULL,
  CodRequisicao INT,
  IndCooperforteAutor BIT,
  IndOutraParteAssociado BIT,
  FK_PessoaJudicial INT,
  FK_PessoaAssociado INT,

  -- Detalhes do Processo
  DataCitacao DATE,
  DataInicioCumprimentoSentenca DATE,
  DataCitacaoCumprimentoSentenca DATE,
  FK_FaseProcessual INT,
  DataUltimoAndamento DATE,
  DescricaoUltimoAndamento VARCHAR(250),
  UltimoAndamento VARCHAR(100),
  ProbabilidadeExito VARCHAR(100),
  IdPrawo VARCHAR(15),
  ValorCausaAtualizado NUMERIC(10,4),
  IndRemuneraAdvogado BIT,
  Observacao VARCHAR(1000),
  FK_Advogado INT,

  -- Dados do ajuizamento
  NumeroProcesso VARCHAR(100),
  FK_TipoAcao INT,
  FK_Vara INT,
  DataDistribuicao DATE,
  ValorCausa NUMERIC(10,4),

  Ativo BIT NOT NULL,
  CONSTRAINT PK_Processo PRIMARY KEY (PK_Processo),
  CONSTRAINT FK_TipoAcao_TB_Processo_TB_TipoAcao FOREIGN KEY (FK_TipoAcao) REFERENCES SCH_JUDICIAL.TB_TipoAcao(PK_TipoAcao),
  CONSTRAINT FK_Vara_TB_Processo_TB_Vara FOREIGN KEY (FK_Vara) REFERENCES SCH_JUDICIAL.TB_Vara(PK_Vara),
  CONSTRAINT FK_FaseProcessual_TB_Processo_TB_FaseProcessual FOREIGN KEY (FK_FaseProcessual) REFERENCES SCH_JUDICIAL.TB_FaseProcessual(PK_FaseProcessual),
  CONSTRAINT FK_Advogado_TB_Processo_TB_Advogado FOREIGN KEY (FK_Advogado) REFERENCES SCH_JUDICIAL.TB_Advogado(PK_Advogado),
  CONSTRAINT FK_PessoaJudicial_TB_Processo_TB_PessoaJudicial FOREIGN KEY (FK_PessoaJudicial) REFERENCES SCH_JUDICIAL.TB_PessoaJudicial(PK_PessoaJudicial)
);

CREATE TABLE SCH_JUDICIAL.TB_AcordoProcesso (
  PK_Processo INT NOT NULL,
  IndAcordoPreProcessual BIT NOT NULL,
  IndAcordoFirmadoPorAdvogado BIT,
  PorcentagemAcordoAdvogado NUMERIC(4,2),
  IndAcordoGeraRemuneracaoAdvogado BIT,
  DataAcordo DATE NOT NULL,
  Ativo BIT NOT NULL,

  CONSTRAINT PK_AcordoProcesso PRIMARY KEY (PK_Processo),
  CONSTRAINT FK_AcordoProcesso_TB_AcordoProcesso_TB_Processo FOREIGN KEY (PK_Processo) REFERENCES SCH_JUDICIAL.TB_Processo (PK_Processo)
);

CREATE TABLE SCH_JUDICIAL.TB_Despesa (
  PK_Despesa INT IDENTITY NOT NULL,
  FK_Processo INT NOT NULL,
  CodRequisicao INT,
  Situacao VARCHAR(100) NOT NULL,
  Data DATE NOT NULL,
  CONSTRAINT PK_Despesa PRIMARY KEY (PK_Despesa),
  CONSTRAINT FK_Processo_TB_Despesa_TB_Processo FOREIGN KEY (FK_Processo) REFERENCES SCH_JUDICIAL.TB_Processo (PK_Processo)
);

CREATE TABLE SCH_JUDICIAL.TB_DespesaAtoProcessual (
  PK_Despesa INT NOT NULL,
  FK_Honorario INT NOT NULL,
  FK_Anexo INT,

  CONSTRAINT PK_DespesaAtoProcessual PRIMARY KEY (PK_Despesa),
  CONSTRAINT FK_DespesaAtoProcessual_TB_DespesaAtoProcessual_TB_Despesa FOREIGN KEY (PK_Despesa) REFERENCES SCH_JUDICIAL.TB_Despesa (PK_Despesa),
  CONSTRAINT FK_DespesaAtoProcessual_TB_DespesaAtoProcessual_TB_Honorario FOREIGN KEY (FK_Honorario) REFERENCES SCH_JUDICIAL.TB_Honorario (PK_Honorario)
);

CREATE TABLE SCH_JUDICIAL.TB_DespesaCusta (
  PK_Despesa INT NOT NULL,
  Descricao VARCHAR(500) NOT NULL,
  Valor NUMERIC(8,2) NOT NULL,
  IndAdiantamentoCusta BIT NOT NULL,
  FK_Anexo INT,

  CONSTRAINT PK_DespesaCusta PRIMARY KEY (PK_Despesa),
  CONSTRAINT FK_DespesaCusta_TB_DespesaCusta_TB_Despesa FOREIGN KEY (PK_Despesa) REFERENCES SCH_JUDICIAL.TB_Despesa (PK_Despesa)
);

CREATE TABLE SCH_JUDICIAL.TB_DespesaDeslocamento (
  PK_Despesa INT NOT NULL,
  Origem VARCHAR(100) NOT NULL,
  Destino VARCHAR(100) NOT NULL,
  DistanciaPercorrida INT NOT NULL,
  Motivo VARCHAR(500) NOT NULL,

  CONSTRAINT PK_DespesaDeslocamento PRIMARY KEY (PK_Despesa),
  CONSTRAINT FK_DespesaDeslocamento_TB_DespesaDeslocamento_TB_Despesa FOREIGN KEY (PK_Despesa) REFERENCES SCH_JUDICIAL.TB_Despesa (PK_Despesa)
);

CREATE TABLE SCH_JUDICIAL.TB_AcordoInativo (
  PK_AcordoInativo INT IDENTITY NOT NULL,
  FK_Processo INT NOT NULL,
  DataInicio DATE NOT NULL,
  DataFim DATE,

  CONSTRAINT PK_AcordoInativo PRIMARY KEY (PK_AcordoInativo),
  CONSTRAINT FK_Processo_TB_AcordoInativo_TB_Processo FOREIGN KEY (FK_Processo) REFERENCES SCH_JUDICIAL.TB_Processo (PK_Processo)
);

CREATE TABLE SCH_JUDICIAL.TB_AcompanhamentoInativo (
  PK_AcompanhamentoInativo INT IDENTITY NOT NULL,
  FK_Processo INT NOT NULL,
  DataInicio DATE NOT NULL,
  DataFim DATE,

  CONSTRAINT PK_AcompanhamentoInativo PRIMARY KEY (PK_AcompanhamentoInativo),
  CONSTRAINT FK_Processo_TB_AcompanhamentoInativo_TB_Processo FOREIGN KEY (FK_Processo) REFERENCES SCH_JUDICIAL.TB_Processo (PK_Processo)
);

CREATE TABLE SCH_JUDICIAL.TB_Configuracao (
  PK_Configuracao INT IDENTITY NOT NULL,
  Chave VARCHAR(100) NOT NULL,
  Valor VARCHAR(100) NOT NULL,

  CONSTRAINT PK_Configuracao PRIMARY KEY (PK_Configuracao)
);INSERT INTO DBSINGULAR.TB_MODULO (CO_MODULO, NO_MODULO, URL_CONEXAO) VALUES ('ACOESJUDICIAIS', 'ACOESJUDICIAIS', 'https://localhost:8443');
INSERT INTO DBSINGULAR.TB_PARAMETRO (CO_PARAMETRO, CO_MODULO, NO_PARAMETRO, VL_PARAMETRO) VALUES (1 ,'ACOESJUDICIAIS','ADMIN_HASH_PASSWORD', '0aca995b93addee9348dcef9016c0f9624dfae3a');
INSERT INTO DBSINGULAR.TB_PARAMETRO (CO_PARAMETRO, CO_MODULO, NO_PARAMETRO, VL_PARAMETRO) VALUES (2, 'ACOESJUDICIAIS','ADMIN_USERNAME','singular');INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('SUPORTE', 30, 'N', '113|-56|72|-13|-1|122|-59|-34|', 0, null, 9);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('i_ERIKA', 8, 'N', '113|-56|72|-13|-1|122|-59|-34|', 47683, 40, 1);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('CARLOSH', 7, 'S', '113|-56|72|-13|-1|122|-59|-34|', 50273, 14, 0);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('I_JUSSARA', 7, 'N', '113|-56|72|-13|-1|122|-59|-34|', 47894, 14, 3);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('ANDREIA', 34, 'S', '113|-56|72|-13|-1|122|-59|-34|', 48951, 70, 1);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('VALERIAM', 6, 'S', '113|-56|72|-13|-1|122|-59|-34|', 18192, 34, 0);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('CLEITIANE', 34, 'S', '113|-56|72|-13|-1|122|-59|-34|', 50218, 70, 1);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('CLAUDETE', 14, 'S', '113|-56|72|-13|-1|122|-59|-34|', 50571, 34, 0);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('MCRIS', 22, 'N', '113|-56|72|-13|-1|122|-59|-34|', 18309, 31, 1);
INSERT INTO dbo.Operador (Nome_Operador, Cod_Grupo, Ind_Ativo, Senha_Operador, Inscricao, Cod_Setor, Versao) VALUES ('I_KITTY', 22, 'N', '113|-56|72|-13|-1|122|-59|-34|', 16031, 34, 2);
INSERT INTO SCH_LEGADO.TB_PESSOA (PK_PESSOA, NOME, CPF, INSCRICAO) VALUES (1, 'Pedro Augusto Correia', '72119758816', 60873);
INSERT INTO SCH_LEGADO.TB_PESSOA (PK_PESSOA, NOME, CPF, INSCRICAO) VALUES (2, 'João Paulo Filho', '80710343639', 76485);
INSERT INTO SCH_LEGADO.TB_PESSOA (PK_PESSOA, NOME, CPF, INSCRICAO) VALUES (3, 'Felipe Oliveira Santos', '18524663910', 43546);
INSERT INTO SCH_LEGADO.TB_PESSOA (PK_PESSOA, NOME, CPF, INSCRICAO) VALUES (4, 'Rafaela Ferreira Rocha', '67614047117', 77655);
INSERT INTO SCH_LEGADO.TB_PESSOA (PK_PESSOA, NOME, CPF, INSCRICAO) VALUES (5, 'Edgar Fabiano', '54742775805', 39573);

INSERT INTO dbo.MOVIMENTO(SEQUENCIAL, PROPOSTA, INSCRICAO, VALOR, DATA_MOVIM, DATA_CONTABIL, COMPROVADO) VALUES (1, 12345, 60873, 1000.00, '2018-01-01', '2018-01-01', 'S');

INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Acre', 'AC');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Distrito Federal', 'DF');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Alagoas', 'AL');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Amapá', 'AP');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Amazonas', 'AM');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Bahia', 'BA');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Ceará', 'CE');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Espírito Santo', 'ES');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Goiás', 'GO');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Maranhão', 'MA');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Mato Grosso', 'MT');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Mato Grosso do Sul', 'MS');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Minas Gerais', 'MG');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Pará', 'PA');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Paraíba', 'PB');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Paraná', 'PR');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Pernambuco', 'PE');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Piauí', 'PI');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Rio de Janeiro', 'RJ');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Rio Grande do Norte', 'RN');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Rio Grande do Sul', 'RS');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Rondônia', 'RO');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Rorâima', 'RR');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Santa Catarina', 'SC');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('São Paulo', 'SP');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Sergipe', 'SE');
INSERT INTO SCH_JUDICIAL.TB_UF (NOME, SIGLA) VALUES ('Tocantins', 'TO');

INSERT INTO SCH_JUDICIAL.TB_TABELAHONORARIO (PK_TABELAHONORARIO, DESCRICAO, DATAINICIO, DATAFIM) VALUES (1, 'Tabela de Honorarios 2009', '2009-01-01', '2009-12-31');
INSERT INTO SCH_JUDICIAL.TB_TABELAHONORARIO (PK_TABELAHONORARIO, DESCRICAO, DATAINICIO, DATAFIM) VALUES (2, 'Tabela de Honorarios 2010', '2010-01-01', '2010-12-31');
INSERT INTO SCH_JUDICIAL.TB_TABELAHONORARIO (PK_TABELAHONORARIO, DESCRICAO, DATAINICIO, DATAFIM) VALUES (3, 'Tabela de Honorarios 2018', '2018-01-01', '2018-12-31');

INSERT INTO SCH_JUDICIAL.TB_ATOPROCESSUAL (PK_ATOPROCESSUAL, NOME, ATIVO) VALUES (1, 'Ajuizado', true);
INSERT INTO SCH_JUDICIAL.TB_ATOPROCESSUAL (PK_ATOPROCESSUAL, NOME, ATIVO) VALUES (2, 'Citado', true);
INSERT INTO SCH_JUDICIAL.TB_ATOPROCESSUAL (PK_ATOPROCESSUAL, NOME, ATIVO) VALUES (3, 'Recurso Especial', true);

INSERT INTO SCH_JUDICIAL.TB_TIPOACAO (PK_TIPOACAO, NOME, ATIVO) VALUES (1, 'Revisional', true);
INSERT INTO SCH_JUDICIAL.TB_TIPOACAO (PK_TIPOACAO, NOME, ATIVO) VALUES (2, 'Execução', true);
INSERT INTO SCH_JUDICIAL.TB_TIPOACAO (PK_TIPOACAO, NOME, ATIVO) VALUES (99, 'TipoAcaoInativa', false);

INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (1, '1ª Vara Cível De Brasília', true);
INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (2, '7ª Vara De Família De Brasília', true);
INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (3, '1ª Vara De Órfãos E Sucessões De Brasília', true);
INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (4, '3º Juizado Especial Cível De Brasília', true);
INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (5, '1ª Vara Criminal De Brasília', true);
INSERT INTO SCH_JUDICIAL.TB_VARA (PK_VARA, NOME, ATIVO) VALUES (6, '2º Juizado De Violência Doméstica E Familiar Contra A Mulher De Brasília', true);

INSERT INTO SCH_JUDICIAL.TB_FASEPROCESSUAL (PK_FASEPROCESSUAL, NOME, ATIVO) VALUES (1, 'Monitória/Citado', true);
INSERT INTO SCH_JUDICIAL.TB_FASEPROCESSUAL (PK_FASEPROCESSUAL, NOME, ATIVO) VALUES (2, 'Cumprimento de Sentença', true);

INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (1, 22.0000, 1, 1, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (2, 32.0000, 1, 2, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (3, 42.0000, 1, 3, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (4, 23.0000, 2, 1, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (5, 33.0000, 2, 2, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (6, 43.0000, 2, 3, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (7, 24.0000, 3, 1, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (8, 34.0000, 3, 2, true);
INSERT INTO SCH_JUDICIAL.TB_HONORARIO (PK_HONORARIO, VALOR, FK_TABELAHONORARIO, FK_ATOPROCESSUAL, ATIVO) VALUES (9, 44.0000, 3, 3, true);

INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (1, '94199603', 'Avenida Jardim do Paraíso', '1', 'Rincão da Madalena', 'Gravataí', 21);
INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (2, '78718150', 'Avenida Sergipe', '2', 'Vila Duarte', 'Rondonópolis', 11);
INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (3, '42810490', 'Avenida Norte', '3', 'Polo Petroquímico', 'Camaçari', 6);
INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (4, '49089013', 'Rua José de Barbosa Ramos', '4', 'Soledade', 'Aracaju', 26);
INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (5, '38414238', 'Rua Eloi da Costa', '5', 'Luizote de Freitas', 'Uberlândia', 13);
INSERT INTO SCH_JUDICIAL.TB_Endereco (PK_Endereco, Cep, Logradouro, Numero, Bairro, Cidade, FK_UF) VALUES (6, '57073636', 'Quadra 06', '6', 'Cidade Universitária', 'Maceió', 3);

INSERT INTO SCH_JUDICIAL.TB_ADVOGADO (PK_Advogado, Nome, FK_Endereco, Telefone, Email, RegistroOAB, FK_UFOAB, FK_Operador, Banco, Agencia, Conta, ATIVO) VALUES (1, 'Ana', 1, '8135045139', 'annie.elizabeth@gmail.com', '23071', 21, 1, 'BB', '34434-X', '23543-2', true);
INSERT INTO SCH_JUDICIAL.TB_ADVOGADO (PK_Advogado, Nome, FK_Endereco, Telefone, Email, RegistroOAB, FK_UFOAB, FK_Operador, ATIVO) VALUES (2, 'Luiz Eduardo Rocha', 2, '81993550389', 'luizeduardorocha@vilarreal.com.br', '43027', 11, 2, true);
INSERT INTO SCH_JUDICIAL.TB_ADVOGADO (PK_Advogado, Nome, FK_Endereco, Telefone, Email, RegistroOAB, FK_UFOAB, FK_Operador, ATIVO) VALUES (3, 'Benjamin Geraldo Duarte', 3, '11991451037', 'benjamingeraldoduarte-86@aulicinobastos.com.br', '170034', 6, 3, true);

INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, Nome, Cpf, Filiacao, Rg, EstadoCivil, Profissao, Telefone, Email, FK_Endereco) VALUES (1, 'FISICA', 'Nome1', '30844713120', 'Mãe do Nome1', '2977269', 'SOLTEIRO', 'Estudante', '61332165487', 'nome1@email.com', 1);
INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, Nome, Cpf, Filiacao, Rg, EstadoCivil, Profissao, Telefone, Email, FK_Endereco) VALUES (2, 'FISICA', 'Nome2', '13285457171', 'Mãe do Nome2', '418757896', 'CASADO', 'Professor', '62314567898', 'nome2@email.com', 2);
INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, Nome, Cpf, Filiacao, Rg, EstadoCivil, Profissao, Telefone, Email, FK_Endereco) VALUES (3, 'FISICA', 'Nome3', '34504436582', 'Mãe do Nome3', '911225341', 'DIVORCIADO', 'Pesquisador', '65345678912', 'nome3@email.com', 3);
INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, RazaoSocial, Cnpj, Telefone, Email, FK_Endereco) VALUES (4, 'JURIDICA', 'Empresa1', '99162698000109', '72654987123', 'empresa1@email.com', 4);
INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, RazaoSocial, Cnpj, Telefone, Email, FK_Endereco) VALUES (5, 'JURIDICA', 'Empresa2', '42437262000168', '64321654687', 'empresa2@email.com', 5);
INSERT INTO SCH_JUDICIAL.TB_PessoaJudicial (PK_PessoaJudicial, TipoPessoa, RazaoSocial, Cnpj, Telefone, Email, FK_Endereco) VALUES (6, 'JURIDICA', 'Empresa3', '66290324000110', '74654321654', 'empresa3@email.com', 6);

INSERT INTO SCH_JUDICIAL.TB_PROCESSO(PK_PROCESSO, NumeroProcesso, FK_ADVOGADO, INDREMUNERAADVOGADO, ATIVO) VALUES (1, '11111111', 1, 1, true);
INSERT INTO SCH_JUDICIAL.TB_PROCESSO(PK_PROCESSO, NumeroProcesso, FK_ADVOGADO, INDREMUNERAADVOGADO, ATIVO) VALUES (2, '22222222', 1, 1, true);

INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (1, 1, '2018-01-01', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (2, 1, '2018-01-02', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (3, 2, '2018-01-03', 'APROVADA');

INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (4, 1, '2018-01-04', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (5, 1, '2018-01-05', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (6, 2, '2018-01-06', 'APROVADA');

INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (7, 1, '2018-01-07', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (8, 1, '2018-01-08', 'APROVADA');
INSERT INTO SCH_JUDICIAL.TB_DESPESA(PK_DESPESA, FK_PROCESSO, DATA, SITUACAO) VALUES (9, 2, '2018-01-09', 'APROVADA');


INSERT INTO SCH_JUDICIAL.TB_DESPESAATOPROCESSUAL(PK_DESPESA, FK_HONORARIO) VALUES (1, 1);
INSERT INTO SCH_JUDICIAL.TB_DESPESAATOPROCESSUAL(PK_DESPESA, FK_HONORARIO) VALUES (2, 2);
INSERT INTO SCH_JUDICIAL.TB_DESPESAATOPROCESSUAL(PK_DESPESA, FK_HONORARIO) VALUES (3, 2);

INSERT INTO SCH_JUDICIAL.TB_DESPESACUSTA(PK_DESPESA, DESCRICAO, VALOR, INDADIANTAMENTOCUSTA) VALUES (4, 'Passagem pra Disney', 2800, FALSE);
INSERT INTO SCH_JUDICIAL.TB_DESPESACUSTA(PK_DESPESA, DESCRICAO, VALOR, INDADIANTAMENTOCUSTA) VALUES (5, 'Dog do Zé', 20.50, FALSE);
INSERT INTO SCH_JUDICIAL.TB_DESPESACUSTA(PK_DESPESA, DESCRICAO, VALOR, INDADIANTAMENTOCUSTA) VALUES (6, 'Vestido para casamento', 795.90, FALSE);

INSERT INTO SCH_JUDICIAL.TB_DESPESADESLOCAMENTO(PK_DESPESA, ORIGEM, DESTINO, DISTANCIAPERCORRIDA, MOTIVO)  VALUES (7, 'Brasília', 'Goiânia', 216, 'Happy hour');
INSERT INTO SCH_JUDICIAL.TB_DESPESADESLOCAMENTO(PK_DESPESA, ORIGEM, DESTINO, DISTANCIAPERCORRIDA, MOTIVO)  VALUES (8, 'Goiânia', 'Brasília', 216, 'Voltando do Happy hour');
INSERT INTO SCH_JUDICIAL.TB_DESPESADESLOCAMENTO(PK_DESPESA, ORIGEM, DESTINO, DISTANCIAPERCORRIDA, MOTIVO)  VALUES (9, 'Brasília', 'São Paulo', 1014, 'Visita ao Zoológico');

INSERT INTO SCH_JUDICIAL.TB_Configuracao (Chave, Valor) VALUES ('VALOR_REMUNERACAO_ACOMPANHAMENTO_PROCESSUAL', '1000');

/*Esse Script é um default, provavelmente deverá ser alterado para suportar o ator especifico do cliente.*/

/*==============================================================*/
/* Table: TB_ATOR                                               */
/*==============================================================*/
CREATE TABLE DBSINGULAR.TB_ATOR (
   CO_ATOR  INTEGER NOT NULL,
   CO_USUARIO           VARCHAR(60)          NOT NULL,
  CONSTRAINT PK_ATOR PRIMARY KEY (CO_ATOR)
);

/*==============================================================*/
/* View: VW_ATOR                                    */
/*==============================================================*/
create view DBSINGULAR.VW_ATOR AS
SELECT A.CO_ATOR, A.CO_USUARIO as CO_USUARIO, A.CO_USUARIO as NO_ATOR, ' ' as DS_EMAIL
FROM DBSINGULAR.TB_ATOR A;

CREATE SEQUENCE DBSINGULAR.SQ_CO_ATOR  START WITH 1 INCREMENT BY 1;


