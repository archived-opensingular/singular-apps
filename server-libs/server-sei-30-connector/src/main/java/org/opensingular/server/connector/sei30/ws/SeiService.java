
package org.opensingular.server.connector.sei30.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SeiService", targetNamespace = "Sei", wsdlLocation = "http://treinamentoseiv3gw.antaq.gov.br/sip/controlador_ws.php?servico=wsdl")
public class SeiService
    extends Service
{

    private final static URL SEISERVICE_WSDL_LOCATION;
    private final static WebServiceException SEISERVICE_EXCEPTION;
    private final static QName SEISERVICE_QNAME = new QName("Sei", "SeiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = Thread.currentThread().getContextClassLoader().getResource("sei20170731.wsdl");
        } catch (Exception ex) {
            e = new WebServiceException(ex);
        }
        SEISERVICE_WSDL_LOCATION = url;
        SEISERVICE_EXCEPTION = e;
    }

    public SeiService() {
        super(__getWsdlLocation(), SEISERVICE_QNAME);
    }

    public SeiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SEISERVICE_QNAME, features);
    }

    public SeiService(URL wsdlLocation) {
        super(wsdlLocation, SEISERVICE_QNAME);
    }

    public SeiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SEISERVICE_QNAME, features);
    }

    public SeiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SeiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SeiPortType
     */
    @WebEndpoint(name = "SeiPortService")
    public SeiPortType getSeiPortService() {
        return super.getPort(new QName("Sei", "SeiPortService"), SeiPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SeiPortType
     */
    @WebEndpoint(name = "SeiPortService")
    public SeiPortType getSeiPortService(WebServiceFeature... features) {
        return super.getPort(new QName("Sei", "SeiPortService"), SeiPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SEISERVICE_EXCEPTION!= null) {
            throw SEISERVICE_EXCEPTION;
        }
        return SEISERVICE_WSDL_LOCATION;
    }

}
